from sklearn.model_selection import train_test_splitfrom sklearn.ensemble import RandomForestRegressorfrom sklearn.metrics import precision_scoreimport pandas as pdimport numpy as npfrom random_forest_screener import the_fundamentals, p_changesdef backtest_random_forest():    """    Splits dataset into "training" and "testing" datasets with a 75:25 ratio.    Trains ...    """    url = 'https://raw.githubusercontent.com/robertmartin8/MachineLearningStocks/master/keystats.csv'    df = pd.read_csv(url, index_col='Date')    df = df[the_fundamentals + p_changes].dropna(how = "any").astype(np.float32)        print("Obtaining url data")    X = df[the_fundamentals].values    Y = (df['stock_p_change'] - df['SP500_p_change']).tolist()    Z = np.array(df[['stock_p_change', 'SP500_p_change']])            print("Splitting dataset")    x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.25)        regressor = RandomForestRegressor(n_estimators = 100, random_state = 0)    regressor.fit(x_train, y_train)        pred = regressor.predict(x_test)        print(f"Accuracy score: {regressor.score(x_test, y_test): .2f}")    print(f"Precision score: {precision_score(y_test, pred): .2f}")        